worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Logs
    error_log /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log;

    upstream flask_backend {
        # Use Docker's internal DNS to dynamically resolve all Flask containers
        server flask-app:5000 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;

        location / {
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Debug header for backend tracing
            add_header X-Backend-Server $upstream_addr;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;

            # Response buffering and compression
            proxy_buffering on;
            gzip on;
            gzip_types text/plain application/json;

            # Security headers
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options SAMEORIGIN;
            add_header X-XSS-Protection "1; mode=block";

            # Trailing slash handling
            rewrite ^(.*)/$ $1 permanent;
        }
    }
}
